class Product
types
	public ProductName = seq1 of char;
	public ProductPrice = real inv p == p >= 0.0;
	public ProductStock = nat	inv s == s >= 0;
	public NetworkDiscount = Network`NetworkDiscount;

instance variables
	name: ProductName;	
	price: ProductPrice := 0;
	stock: ProductStock := 0;
	discount: NetworkDiscount := 0.0;
	
operations	
	public Product: ProductName * ProductPrice * ProductStock * NetworkDiscount ==> Product
	Product(n,p,s,d) == (name := n; setPrice(p); setStock(s); setDiscount(d); return self);
	
	pure public getName: () ==> ProductName
	getName() == return name;
	
	pure public getPrice: () ==> ProductPrice
	getPrice() == return price;
	
	pure public getStock: () ==> ProductStock
	getStock() == return stock;
	
	pure public getDiscount: () ==> NetworkDiscount
	getDiscount() == return discount;
	
	public setPrice: ProductPrice ==> ()
	setPrice(p) == price := p
	pre p >= 0.0;
	
	public setStock: ProductStock ==> ()
	setStock(s) == stock := s
	pre s >= 0.0;
	
	public setDiscount: NetworkDiscount ==> ()
	setDiscount(d) == discount := d
	pre d >= 0.0 and d <= 1.0;

end Product