class Merchant is subclass of User
types
	public ProductName = Product`ProductName;
	public NetworkFee = Network`NetworkFee;
values

instance variables
	fee: NetworkFee := 0;	
	products: map ProductName to Product := {|->};
		
operations
	public Merchant: ? * UserName * UserBalance ==> Merchant
	Merchant(r,n,b) == (referrer := r; name := n; balance := b; return self);

	public getFee: () ==> NetworkFee
	getFee() == return fee;
	
	public setFee: NetworkFee ==> ()
	setFee(f) == fee := f;
	
	public getProduct: ProductName ==> Product
	getProduct(n) == return products(n)
	pre n in set dom products;
	
	public addProduct: Product ==> ()
	addProduct(p) == products := products munion {p.getName() |-> p}
	pre p not in set rng products;
	
	public removeProduct: ProductName ==> Product
	removeProduct(n) == (
		dcl product: Product := self.getProduct(n);
		products := {n} <-: products;
		return product;
	) pre n in set dom products;	
	
functions

traces

end Merchant